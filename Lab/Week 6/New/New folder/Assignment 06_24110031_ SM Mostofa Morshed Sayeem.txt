|````````````````````|
|                    |
|       Task 1       |
|                    |
``````````````````````


public class Product {
    private String name;
    private double price;
    private int quantity;
    
    public Product() {
        this.name = "Unknown";
        this.price = 0.0;
        this.quantity = 0;
    }
    
    public Product(String name, double price) {
        this.name = name;
        this.price = price;
        this.quantity = 0;
    }
    
    public String getName() {
        return name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public double getPrice() {
        return price;
    }
    
    public void setPrice(double price) {
        this.price = price;
    }
    
    public int getQuantity() {
        return quantity;
    }
    
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }
    
    public void displayInfo() {
        System.out.println("Product Name: " + name);
        System.out.println("Price: $" + price);
    }
    
    public void displayInfo(boolean showQuantity) {
        System.out.println("Product Name: " + name);
        System.out.println("Price: $" + price);
        if (showQuantity) {
            System.out.println("Quantity: " + quantity);
        }
    }
}



================================================================================================================================================================


|````````````````````|
|                    |
|       Task 2       |
|                    |
``````````````````````


//Company class
public class Company {
    private String name;
    private Employee[] employees;
    private int count;
    private int capacity;
    
    public Company() {
        this.name = "ABC Company";
        this.capacity = 3;
        this.employees = new Employee[capacity];
        this.count = 0;
    }
    
    public void addEmployee(Employee emp) {
        if (count < capacity) {
            employees[count] = emp;
            count++;
            System.out.println(emp.getName() + " has joined the company");
        } else {
            System.out.println("No more vacancy");
        }
    }
    
    public void removeEmployee(Employee emp) {
        for (int i = 0; i < count; i++) {
            if (employees[i] == emp) {
                System.out.println(emp.getName() + " has left the company");
                for (int j = i; j < count - 1; j++) {
                    employees[j] = employees[j + 1];
                }
                employees[count - 1] = null;
                count--;
                break;
            }
        }
    }
    
    public void details() {
        System.out.println("Company Name: " + name);
        System.out.println("Total Employee: " + count);
        System.out.println("Fulltime Employees: ");
        for (int i = 0; i < count; i++) {
            if (employees[i].getType().equals("Fulltime")) {
                System.out.println("Name: " + employees[i].getName() + ", ID: " + employees[i].getId());
            }
        }
        System.out.println("Part-Time Employees: ");
        for (int i = 0; i < count; i++) {
            if (employees[i].getType().equals("Part-time")) {
                System.out.println("Name: " + employees[i].getName() + ", ID: " + employees[i].getId());
            }
        }
    }
}


//employee class
public class Employee {
    private String name;
    private int id;
    private String type;
    
    public Employee() {
        this.name = "Default";
        this.id = 0;
        this.type = "Fulltime";
        System.out.println("A default employee has been created");
    }
    
    public Employee(String name, int id, String type) {
        this.name = name;
        this.id = id;
        this.type = type;
    }
    
    public String getName() {
        return name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public int getId() {
        return id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
    
    public String getType() {
        return type;
    }
    
    public void setType(String type) {
        this.type = type;
    }
}


================================================================================================================================================================


|````````````````````|
|                    |
|       Task 3       |
|                    |
``````````````````````


//student class 
public class Student {
    private String name;
    private int id;
    private double cgpa;
    
    public Student(String name, int id, double cgpa) {
        this.name = name;
        this.id = id;
        this.cgpa = cgpa;
    }
    
    public String getName() {
        return name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public int getId() {
        return id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
    
    public double getCgpa() {
        return cgpa;
    }
    
    public void setCgpa(double cgpa) {
        this.cgpa = cgpa;
    }
    
    public void showInfo() {
        System.out.println("Student info:");
        System.out.println("Student Name: " + name);
        System.out.println("ID: " + id);
        System.out.println("CGPA:  " + cgpa);
    }
}

//dept class
public class Department {
    private String name;
    private Student[] students;
    private int count;
    private int capacity;
    
    public Department(String name) {
        this.name = name;
        this.capacity = 5;
        this.students = new Student[capacity];
        this.count = 0;
    }
    
    public void addStudent(Student... newStudents) {
        for (Student student : newStudents) {
            if (count < capacity) {
                boolean exists = false;
                for (int i = 0; i < count; i++) {
                    if (students[i].getId() == student.getId()) {
                        exists = true;
                        break;
                    }
                }
                if (!exists) {
                    students[count] = student;
                    count++;
                    System.out.println("Welcome to " + name + " department, " + student.getName());
                } else {
                    System.out.println("Student with the same ID already exists, Please try with another ID");
                }
            }
        }
    }
    
    public void findStudent(int id) {
        for (int i = 0; i < count; i++) {
            if (students[i].getId() == id) {
                students[i].showInfo();
                return;
            }
        }
        System.out.println("Student with this ID doesn't exist, Please give a valid ID");
    }
    
    public void details() {
        System.out.println("Department Name: " + name);
        System.out.println("Number of student:" + count);
        System.out.println("Details of the students: ");
        for (int i = 0; i < count; i++) {
            System.out.println("Student name: " + students[i].getName() + ", ID: " + students[i].getId() + ", cgpa: " + students[i].getCgpa());
        }
    }
}


================================================================================================================================================================


|````````````````````|
|                    |
|       Task 4       |
|                    |
``````````````````````

//Spaceship
public class Spaceship {
    private String name;
    private int capacity;
    private Cargo[] cargoItems;
    private int cargoCount;
    private int currentWeight;
    
    public Spaceship(String name, int capacity) {
        this.name = name;
        this.capacity = capacity;
        this.cargoItems = new Cargo[100];
        this.cargoCount = 0;
        this.currentWeight = 0;
    }
    
    public void loadCargo(Cargo cargo) {
        if (cargoCount < 100) {
            if (currentWeight + cargo.getWeight() <= capacity) {
                cargoItems[cargoCount] = cargo;
                cargoCount++;
                currentWeight += cargo.getWeight();
            } else {
                int excess = (currentWeight + cargo.getWeight()) - capacity;
                System.out.println("Warning: Unable to load " + cargo.getName() + " inside " + name + ". Exceeds capacity by " + excess + ".");
            }
        }
    }
    
    public void displayDetails() {
        System.out.println("Spaceship Name: " + name);
        System.out.println("Capacity: " + capacity);
        System.out.println("Current Cargo Weight: " + currentWeight);
        System.out.print("Cargo:");
        for (int i = 0; i < cargoCount; i++) {
            System.out.print(cargoItems[i].getName() + " ");
        }
        System.out.println();
    }
}



//cargo
public class Cargo {
    private String name;
    private int weight;
    
    public Cargo(String name, int weight) {
        this.name = name;
        this.weight = weight;
    }
    
    public String getName() {
        return name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public int getWeight() {
        return weight;
    }
    
    public void setWeight(int weight) {
        this.weight = weight;
    }
}


================================================================================================================================================================
