|````````````````````|
|                    |
|       Task 1       |
|                    |
``````````````````````


public class Toy {

    String name;
    int price;

    public Toy(String name, int price) {
        this.name = name;
        this.price = price;
        System.out.println("A new toy has been made!");
    }

    public void updatePrice(int newPrice) {
        this.price = newPrice;
    }

    public void updateName(String newName) {
        System.out.println("Changing old name : " + this.name);
        this.name = newName;
        System.out.println("New name: " + this.name);
    }

    public void showPrice() {
        System.out.println("price: " + this.price + " Taka");
    }

}



================================================================================================================================================================


|````````````````````|
|                    |
|       Task 2       |
|                    |
``````````````````````



public class Student {

    public int Student_id;
    public double CGPA;
    public String[] courses = new String[4];
    public int index = 0;

    public Student(int new_id) {
        Student_id = new_id;
        System.out.println("A student with ID " + Student_id + " has been created.");
    }

    public Student(int new_id, double new_cgpa) {
        Student_id = new_id;
        CGPA = new_cgpa;
        System.out.println("A student with ID " + Student_id + " and CGPA " + CGPA + " has been created.");
    }

    public void storeCG(double new_cgpa) {
        CGPA = new_cgpa;
    }

    public void showAdvisee() {
        System.out.println("Student ID: " + Student_id + ", CGPA: " + CGPA);

        if (index == 0) {
            System.out.println("No courses added.");
        } else {
            System.out.print("Added courses are:\n");
            for (int i = 0; i < index; i++) {
                System.out.print(courses[i] + " ");
            }
            System.out.println();
        }
    }

    public void addCourse(String course_name) {
        if (CGPA == 0) {
            System.out.println("Failed to add " + course_name + "\nset CGPA first");
        } else if (CGPA < 3) {
            if (index > 2) {
                System.out.println("failed to add " + course_name + "\nCG is low. Can't add more than 3 courses.");
            } else {
                courses[index] = course_name;
                index++;
            }
        } else if (CGPA >= 3) {
            if (index >= 4) {
                System.out.println("Failed to add " + course_name + "\nMaximum 4 courses allowed.");
            } else {
                courses[index] = course_name;
                index++;
            }
        }
    }

    public void removeAllCourse() {
        for (int i = 0; i < courses.length; i++) {
            courses[i] = null;
        }
        index = 0;
    }

    public void storeID(int new_id) {
        Student_id = new_id;
    }

    public void addCourse(String courses[]) {
        for (int i = 0; i < courses.length; i++) {
            addCourse(courses[i]);
        }
    }

}



================================================================================================================================================================


|````````````````````|
|                    |
|       Task 3       |
|                    |
``````````````````````


public class Triangle {

    public int side1;
    public int side2;
    public int side3;

    public Triangle(int side1, int side2, int side3) {
        this.side1 = side1;
        this.side2 = side2;
        this.side3 = side3;
    }
    public void triangleDetails() {
        System.out.println("Three sides of the triangle are: "+ side1 + "," + side2 + "," + side3 + "\nPerimeter: " + (side1 + side2 + side3));
    }

    public String printTriangleType() {
        if (side1 == side2 && side2 == side3) {
            return "This is an Equilateral Triangle.";
        } else if (side1 == side2 || side2 == side3 || side1 == side3) {
            return "This is an Isosceles Triangle.";
        } else {
            return "This is a Scalene Triangle.";
        }
    }
    public void compareTriangles(Triangle newLocation) {
        
        if (this == newLocation) {
            System.out.println("These two triangle objects have the same address.");
            return;
        }
        
        boolean sidesEqual = (this.side1 == newLocation.side1 && this.side2 == newLocation.side2 && this.side3 == newLocation.side3);
        
        int thisPerimeter = this.side1 + this.side2 + this.side3;
        int locationPerimeter = newLocation.side1 + newLocation.side2 + newLocation.side3;
        boolean perimeterEqual = (thisPerimeter == locationPerimeter);
        
        if (sidesEqual) {
            System.out.println("Addresses are different but the sides of the triangles are equal.");
        } else if (perimeterEqual) {
            System.out.println("Only the perimeter of both triangles is equal.");
        } else {
            System.out.println("Addresses, length of the sides and perimeter all are different.");
        }
    }

}

================================================================================================================================================================


|````````````````````|
|                    |
|       Task 4       |
|                    |
``````````````````````


public class Player {
    public String name;
    public int age;
    public int totalMatches;
    
    public Player(String name, int age, int totalMatches) {
        this.name = name;
        this.age = age;
        this.totalMatches = totalMatches;
    }
}


       ||==================================================================================================================================||


public class Team {
    public String teamName;
    public Player[] players;
    public int playerCount;
    
    public Team() {
        this.players = new Player[10];
        this.playerCount = 0;
    }
    
    public Team(String teamName) {
        this.teamName = teamName;
        this.players = new Player[10];
        this.playerCount = 0;
    }
    
    public void updateName(String teamName) {
        this.teamName = teamName;
    }
    
    public void addPlayer(Player name) {
        if (playerCount < players.length) {
            players[playerCount] = name;
            playerCount++;
        }
    }
    
    public void printDetail() {
        System.out.println("Team: " + teamName);
        System.out.println("List of players: ");
        for (int i = 0; i < playerCount; i++) {
            System.out.println("Name: " + players[i].name);
            System.out.println("Age: " + players[i].age + ", Total Matches: " + players[i].totalMatches);
        }
    }
}


================================================================================================================================================================
